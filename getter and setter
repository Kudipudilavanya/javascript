In JavaScript, you can use getter and setter methods to control access to object properties. Getter methods allow you to retrieve the value of a property, and setter methods allow you to set or modify the value of a property while providing validation or additional logic. Here's a JavaScript program that demonstrates the use of getter and setter methods:

javascript
Copy code
// Creating an Object with Getter and Setter

const person = {
    _firstName: "John",
    _lastName: "Doe",
    _age: 30,

    // Getter for firstName
    get firstName() {
        return this._firstName;
    },

    // Getter for lastName
    get lastName() {
        return this._lastName;
    },

    // Getter and Setter for age
    get age() {
        return this._age;
    },
    set age(newAge) {
        if (typeof newAge === "number" && newAge >= 0) {
            this._age = newAge;
        } else {
            console.log("Invalid age value. Please provide a valid number.");
        }
    },

    // Full Name Getter
    get fullName() {
        return `${this._firstName} ${this._lastName}`;
    },

    // Setter for fullName
    set fullName(newFullName) {
        const names = newFullName.split(" ");
        if (names.length === 2) {
            this._firstName = names[0];
            this._lastName = names[1];
        } else {
            console.log("Invalid full name format. Please provide a first name and a last name.");
        }
    }
};

// Getting and Setting Values
console.log("Initial Full Name:", person.fullName);
person.fullName = "Alice Smith";
console.log("Updated Full Name:", person.fullName);

console.log("Initial Age:", person.age);
person.age = 35;
console.log("Updated Age:", person.age);

person.age = "Invalid"; // Attempt to set an invalid age

// Attempt to set an invalid full name
person.fullName = "Invalid Name";
In this program:

We create an object person with properties _firstName, _lastName, and _age, prefixed with underscores to indicate they are meant to be private.

We define getter methods for firstName, lastName, age, and fullName to retrieve the values of these properties.

We define setter methods for age and fullName to set or modify the values of these properties. The setter methods include validation logic to ensure that the provided values are valid.

We demonstrate getting and setting values for the fullName and age properties, including attempting to set invalid values.

You can run this program in a JavaScript environment to see how getter and setter methods can be used to control access to object properties and add validation or logic when getting or setting values.




